# -*- coding: utf-8 -*-

from odoo import api, fields, models, _

class StockInventory(models.Model):
    _inherit = "stock.inventory"

    def _prepare_equipment_vals(self, product, lot_id, location_dest_id):
        """
        Prepare values to create Equipment
        :param product:
        :param lot_id:
        :param location_dest_id:
        :return: vals for create equipment
        """
        return {
            'name': product.name,
            'equipment_assign_to': product.equipment_assign_to,
            'maintenance_team_id': product.maintenance_team_id.id,
            'technician_user_id': product.technician_user_id.id,
            'model':product.model,
            'lot_id': lot_id and lot_id.id,
            'category_id': product.default_equipment_category_id.id,
            'created_from_stock_lot': True,
            'current_stock_location_id': location_dest_id.id,
            'serial_no': lot_id and lot_id.name
        }

    def post_inventory(self):
        super(StockInventory, self).post_inventory()
        for line in self.line_ids:
            if line.create_equipment:
                equipment_vals = self._prepare_equipment_vals(line.product_id,line.prod_lot_id,line.location_id)
                equipment_id = self.env['maintenance.equipment'].create(equipment_vals)
                line.prod_lot_id.equipment_id = equipment_id



class StockInventoryLine(models.Model):
    _inherit = "stock.inventory.line"

    equipment_id = fields.Many2one('maintenance.equipment',related="prod_lot_id.equipment_id",readonly=True,string="Equipment",help="The equipment generated by this stock inventory line.")
    create_equipment = fields.Boolean(string="Create Equipment",help="select this to create a new equipment automatically once the stock picking validated")
    is_equipment = fields.Boolean(string="Is equipment?",related="product_id.is_equipment")


